// bigint Test Program
//
// Tests:  times_10, uses ==
//
// NEED TO IMPLEMENT
// 
#include <iostream>
#include <cassert>
#include "bigint.hpp"

//===========================================================================
int main () {
    {
        //------------------------------------------------------
        // Setup fixture
        bigint bi(3);

        // Test 
        bi = bi.times10(0);

        // Verify
        assert(bi == 3);  
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint bi(3);

        // Test 
        bi = bi.times10(1);

        // Verify
        assert(bi == 30);  
    }
    
    {
        //------------------------------------------------------
        // Setup fixture
        bigint bi(3);

        // Test 
        bi = bi.times10(3);

        // Verify
        assert(bi == 3000);  
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint bi(987654321);

        // Test 
        bi = bi.times10(2);

        // Verify
        assert(bi == "98765432100"); 
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint bi(123456789);

        // Test 
        bi = bi.times10(5);

        // Verify
        assert(bi == "12345678900000"); 
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint bi5("987654321098765432109876543210987654321098765432109876543210");

        // Test 
        bi5 = bi5.times10(20);

        // Verify
        assert(bi5 == "98765432109876543210987654321098765432109876543210987654321000000000000000000000"); 
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint bi6("123456789012345678901234567890123456789012345678901234567890");

        // Test 
        bi6 = bi6.times10(50);

        // Verify
        assert(bi6 == "12345678901234567890123456789012345678901234567890123456789000000000000000000000000000000000000000000000000000"); 

        //------------------------------------------------------
    }

    {
    //50 zeros: 00000000000000000000000000000000000000000000000000
        //------------------------------------------------------
        // Setup fixture
        bigint bi6("123456789012345678901234567890123456789012345678901234567890");

        // Test 
        bi6 = bi6.times10(100);

        // Verify
        assert(bi6 == "1234567890123456789012345678901234567890123456789012345678900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"); 

        //------------------------------------------------------
    }
    
    {
        std::cout << "Done testing times_10" << std::endl;
        return 0;
    }
}

